build-docker:
  stage: build
  image: "docker.plzdev.ir/library/docker:stable"
  rules:
    - if: "$CI_COMMIT_TAG =~ /^v.*$/"
      variables:
        IMAGE_TAG: ${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG}
    - if: '$CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "develop"'
      variables:
        IMAGE_TAG: ${CI_REGISTRY_IMAGE}:${CI_COMMIT_BRANCH}
  script:
    - echo "${CI_REGISTRY_PASSWORD}" | docker login --username ${CI_REGISTRY_USER} --password-stdin ${CI_REGISTRY}
    - echo ${IMAGE_TAG}
    - docker build --tag ${IMAGE_TAG} .
    - docker push ${IMAGE_TAG}

deploy-docker:
  stage: deploy
  rules:
    - if: "$CI_COMMIT_TAG =~ /^v.*$/"
      variables:
        D_USER: ${SERVER_USER_P}
        D_IP: ${SERVER_IP_P}
        D_PATH: ${SERVER_PATH_P}
        D_PORT: ${SERVER_PORT}
      when: manual
    - if: '$CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "develop"'
      variables:
        D_USER: ${SERVER_USER}
        D_IP: ${SERVER_IP}
        D_PATH: ${BASE_DIR}/${CI_COMMIT_BRANCH}
        D_PORT: ${SERVER_PORT}
  script:
    - chmod go= $DEPLOY_KEY
    - ssh -i $DEPLOY_KEY -o StrictHostKeyChecking=no -p $D_PORT $D_USER@$D_IP "echo '${CI_REGISTRY_PASSWORD}' | docker login --username ${CI_REGISTRY_USER} --password-stdin ${CI_REGISTRY}"
    - ssh -i $DEPLOY_KEY -o StrictHostKeyChecking=no -p $D_PORT $D_USER@$D_IP "cd ${D_PATH} && dotenv set TAG=${CI_COMMIT_TAG}"
    - ssh -i $DEPLOY_KEY -o StrictHostKeyChecking=no -p $D_PORT $D_USER@$D_IP "cd ${D_PATH} && docker-compose pull node-test"
    - ssh -i $DEPLOY_KEY -o StrictHostKeyChecking=no -p $D_PORT $D_USER@$D_IP "cd ${D_PATH} && docker-compose up --force-recreate --detach node-test"
